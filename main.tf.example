#################### Initialize Providers ####################
provider "aws" {
  region = var.aws_region
}

provider "azurerm" {
  features {}
  subscription_id = var.azure_subscription_id
}

provider "cato" {
  baseurl    = var.baseurl
  token      = var.cato_token
  account_id = var.account_id
}

provider "google" {
  project = var.project
  region  = var.gcp_region
}

#################### AWS Modules ####################
module "ipsec-aws" {
  count  = var.build_aws_ipsec_module ? 1 : 0
  source = "./modules/cato/aws/ipsec"
  ### Create 2 Allocated IPs in Cato CMA, and retrieve the IDs via API 
  ### using query.entityLookup() filtering for type allocatedIP
  primary_public_cato_ip_id   = "12345" 
  secondary_public_cato_ip_id = "12345"
  cgw_ip                      = "11.11.11.11" # Primary cato public IP address
}

module "vsocket-aws" {
  count    = var.build_aws_vsocket_module ? 1 : 0
  source   = "./modules/cato/aws/vsocket"
  key_pair = "cato-keypair-us-west-1"
}

module "vsocket-aws-vpc" {
  count    = var.build_aws_vsocket_vpc_module ? 1 : 0
  source   = "./modules/cato/aws/vsocket-vpc"
  key_pair = "cato-keypair-us-west-1"
}

module "vsocket-aws-ha" {
  count      = var.build_aws_vsocket_ha_module ? 1 : 0
  source     = "./modules/cato/aws/vsocket-ha"
  key_pair   = "cato-keypair-us-west-1"
  token      = var.cato_token
  account_id = var.account_id
}

module "vsocket-aws-ha-vpc" {
  count      = var.build_aws_vsocket_ha_vpc_module ? 1 : 0
  source     = "./modules/cato/aws/vsocket-ha-vpc"
  key_pair   = "cato-keypair-us-west-1"
  token      = var.cato_token
  account_id = var.account_id
}

#################### Azure Modules ####################
module "ipsec-azure" {
  count  = var.build_azure_ipsec_module ? 1 : 0
  source = "./modules/cato/azure/ipsec"
  ### Create 2 Allocated IPs in Cato CMA, and retrieve the IDs via API 
  ### using query.entityLookup() filtering for type allocatedIP
  token                       = var.cato_token
  account_id                  = var.account_id
  primary_public_cato_ip_id   = "12345"
  primary_cato_pop_ip         = "11.11.11.11"
  secondary_public_cato_ip_id = "12346"
  secondary_cato_pop_ip       = "11.11.22.22"
}

module "vsocket-azure" {
  count  = var.build_azure_vsocket_module ? 1 : 0
  source = "./modules/cato/azure/vsocket"
}

module "vsocket-azure-vnet" {
  count  = var.build_azure_vsocket_vnet_module ? 1 : 0
  source = "./modules/cato/azure/vsocket-vnet"
}

module "vsocket-azure-ha" {
  count                 = var.build_azure_vsocket_ha_module ? 1 : 0
  source                = "./modules/cato/azure/vsocket-ha"
  token                 = var.cato_token
  account_id            = var.account_id
  azure_subscription_id = var.azure_subscription_id
}

module "vsocket-azure-ha-vnet" {
  count                 = var.build_azure_vsocket_ha_vnet_module ? 1 : 0
  source                = "./modules/cato/azure/vsocket-ha-vnet"
  token                 = var.cato_token
  account_id            = var.account_id
  azure_subscription_id = var.azure_subscription_id
}

#################### GCP Modules ####################
module "vsocket-gcp" {
  count  = var.build_gcp_vsocket_module ? 1 : 0
  source = "./modules/cato/gcp/vsocket"
  # create_firewall_rule     = true
  # wan_firewall_rule_name   = "allow-management-access" # Only used if create_firewall_rule = true
  # allowed_ports            = ["22", "443"] # Only used if create_firewall_rule = true
  # management_source_ranges = [""] # Only used if create_firewall_rule = true, replace with your IP range
}